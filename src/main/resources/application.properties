# Place for adding properties we need to access as-is without converting them into java objects and
# using placeholders, @Value annotations or Environment. This saves us from loading yaml properties
# file into Environment.
app-short-version=beta

spring.jmx.enabled=false

# Keep the banner for now to help debug.
# spring.main.banner-mode=off

spring.profiles.active=production

server.port=8080
# Maximum queue length for incoming connection requests when all possible request processing threads are in use.
server.tomcat.accept-count=5
# Enables access log of tomcat
server.tomcat.accesslog.enabled=false
# Can also change thread pool, request size etc if needed.

management.cloudfoundry.enabled=true

management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.health.cache.time-to-live=10s
management.endpoint.health.show-details=never
management.endpoints.web.exposure.include=health

management.health.defaults.enabled=false
management.health.diskspace.enabled=true
management.health.diskspace.threshold=1GB

management.endpoints.jmx.exposure.exclude=*

management.endpoint.auditevents.enabled=false

management.trace.http.enabled=false

management.metrics.use-global-registry=false
management.metrics.web.server.auto-time-requests=false

# TODO: regularly watch for 'positive matches and unconditional classes' and exclude those not required.
spring.autoconfigure.exclude=org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration \
  , org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration \
  , org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration \
  , org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration
